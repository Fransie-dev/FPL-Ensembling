{
plot(df[,i], main='',  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency")
}
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
# Updated univariate plots ------------------------------------------------
library(ggplot2); library(tidyverse); library(cowplot);
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
df_f$Source <- 'FPL'
df_u$Source <- 'Understat'
df_f$shots <- df_f$key_passes <- df_f$xG <- df_f$xA <- df_f$npg <- df_f$npxG <- df_f$xGChain <- df_f$xGChain <- df_f$xGBuildup <- NA
df_temp <- rbind(df_f,df_u)
df_temp$Source <- as.factor(df_temp$Source)
save_ggs <- function(df_temp, i, ax.tit, ax.text, wrap,sz,y_label_scl){
if(names(df_temp[i]) %in% c('shots', 'key_passes','xG','xA','npg','npxG','xGChain','xGBuildup')) df_temp <- df_temp[complete.cases(df_temp), ]
if(is.numeric(df_temp[[i]]))
{
ifelse(length(unique(df_temp[[i]])) < 30 && !anyNA(df_temp[[i]]),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz,
breaks = seq(min(df_temp[[i]]),
max(df_temp[[i]]),
length.out = length(unique(df_temp[[i]])))) + facet_grid(Source~.,scales = "free_x",space = "free_x")  + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz) + facet_grid(Source~.,scales = "free_x",space = "free_x")+ theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')))
}
else {if(length(unique(df_temp[[i]])) < 20) ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))
else ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x=element_blank(),                                                                                                                                                                                                axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))}
ggsave(filename = paste0(i, '.pdf'), width = 15, height = 15)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75, ax.text = 50, wrap = 50, sz = 3.5,y_label_scl = 0.4)
# Updated univariate plots ------------------------------------------------
library(ggplot2); library(tidyverse); library(cowplot);
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
df_f$Source <- 'Official'
df_u$Source <- 'Merged'
df_f$shots <- df_f$key_passes <- df_f$xG <- df_f$xA <- df_f$npg <- df_f$npxG <- df_f$xGChain <- df_f$xGChain <- df_f$xGBuildup <- NA
df_temp <- rbind(df_f,df_u)
df_temp$Source <- as.factor(df_temp$Source)
save_ggs <- function(df_temp, i, ax.tit, ax.text, wrap,sz,y_label_scl){
if(names(df_temp[i]) %in% c('shots', 'key_passes','xG','xA','npg','npxG','xGChain','xGBuildup')) df_temp <- df_temp[complete.cases(df_temp), ]
if(is.numeric(df_temp[[i]]))
{
ifelse(length(unique(df_temp[[i]])) < 30 && !anyNA(df_temp[[i]]),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz,
breaks = seq(min(df_temp[[i]]),
max(df_temp[[i]]),
length.out = length(unique(df_temp[[i]])))) + facet_grid(Source~.,scales = "free_x",space = "free_x")  + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz) + facet_grid(Source~.,scales = "free_x",space = "free_x")+ theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')))
}
else {if(length(unique(df_temp[[i]])) < 20) ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))
else ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x=element_blank(),                                                                                                                                                                                                axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))}
ggsave(filename = paste0(i, '.pdf'), width = 15, height = 15)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 1, ax.text = 1, wrap = 50, sz = 1,y_label_scl = 1)
# Updated univariate plots ------------------------------------------------
library(ggplot2); library(tidyverse); library(cowplot);
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
df_f$Source <- 'Offical'
df_u$Source <- 'Merged'
df_f$shots <- df_f$key_passes <- df_f$xG <- df_f$xA <- df_f$npg <- df_f$npxG <- df_f$xGChain <- df_f$xGChain <- df_f$xGBuildup <- NA
df_temp <- rbind(df_f,df_u)
df_temp$Source <- as.factor(df_temp$Source)
save_ggs <- function(df_temp, i, ax.tit, ax.text, wrap,sz,y_label_scl){
if(names(df_temp[i]) %in% c('shots', 'key_passes','xG','xA','npg','npxG','xGChain','xGBuildup')) df_temp <- df_temp[complete.cases(df_temp), ]
if(is.numeric(df_temp[[i]]))
{
ifelse(length(unique(df_temp[[i]])) < 30 && !anyNA(df_temp[[i]]),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz,
breaks = seq(min(df_temp[[i]]),
max(df_temp[[i]]),
length.out = length(unique(df_temp[[i]])))) + facet_grid(Source~.,scales = "free_x",space = "free_x")  + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz) + facet_grid(Source~.,scales = "free_x",space = "free_x")+ theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')))
}
else {if(length(unique(df_temp[[i]])) < 20) ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))
else ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x=element_blank(),                                                                                                                                                                                                axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))}
ggsave(filename = paste0(i, '.pdf'), width = 15, height = 15)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75, ax.text = 50, wrap = 50, sz = 3.5,y_label_scl = 0.4)
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/2, ax.text = 50, wrap = 50/2, sz = 3.5,y_label_scl = 0.4)
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/2, ax.text = 50/2, wrap = 50/2, sz = 3.5,y_label_scl = 0.4)
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/2, ax.text = 50/3, wrap = 50/2, sz = 3.5,y_label_scl = 0.4)
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/2, ax.text = 50/3, wrap = 50/2, sz = 3.5,y_label_scl = 0.4)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/2, ax.text = 50/3, wrap = 50/2, sz = 3.5,y_label_scl = 0.4)
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/2, ax.text = 50/2, wrap = 50/3, sz = 3.5/2,y_label_scl = 0.4)
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/3, ax.text = 50/2, wrap = 50/3, sz = 3.5/2,y_label_scl = 0.4)
# Non-duplicated entries --------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/3, ax.text = 50/2, wrap = 50/3, sz = 3.5/2,y_label_scl = 0.4)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//us//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/3, ax.text = 50/2, wrap = 50/3, sz = 3.5/2,y_label_scl = 0.4)
# Updated univariate plots ------------------------------------------------
library(ggplot2); library(tidyverse); library(cowplot);
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
df_f$Source <- 'Official'
df_u$Source <- 'Merged'
df_f$shots <- df_f$key_passes <- df_f$xG <- df_f$xA <- df_f$npg <- df_f$npxG <- df_f$xGChain <- df_f$xGChain <- df_f$xGBuildup <- NA
df_temp <- rbind(df_f,df_u)
df_temp$Source <- as.factor(df_temp$Source)
save_ggs <- function(df_temp, i, ax.tit, ax.text, wrap,sz,y_label_scl){
if(names(df_temp[i]) %in% c('shots', 'key_passes','xG','xA','npg','npxG','xGChain','xGBuildup')) df_temp <- df_temp[complete.cases(df_temp), ]
if(is.numeric(df_temp[[i]]))
{
ifelse(length(unique(df_temp[[i]])) < 30 && !anyNA(df_temp[[i]]),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz,
breaks = seq(min(df_temp[[i]]),
max(df_temp[[i]]),
length.out = length(unique(df_temp[[i]])))) + facet_grid(Source~.,scales = "free_x",space = "free_x")  + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz) + facet_grid(Source~.,scales = "free_x",space = "free_x")+ theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')))
}
else {if(length(unique(df_temp[[i]])) < 20) ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))
else ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x=element_blank(),                                                                                                                                                                                                axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))}
ggsave(filename = paste0(i, '.pdf'), width = 15, height = 15)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/3, ax.text = 50/2, wrap = 50/3, sz = 3.5/2,y_label_scl = 0.4)
# Updated univariate plots ------------------------------------------------
library(ggplot2); library(tidyverse); library(cowplot);
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
df_f$Source <- 'Official'
df_u$Source <- 'Merged'
df_f$shots <- df_f$key_passes <- df_f$xG <- df_f$xA <- df_f$npg <- df_f$npxG <- df_f$xGChain <- df_f$xGChain <- df_f$xGBuildup <- NA
df_temp <- rbind(df_f,df_u)
df_temp$Source <- as.factor(df_temp$Source)
save_ggs <- function(df_temp, i, ax.tit, ax.text, wrap,sz,y_label_scl){
if(names(df_temp[i]) %in% c('shots', 'key_passes','xG','xA','npg','npxG','xGChain','xGBuildup')) df_temp <- df_temp[complete.cases(df_temp), ]
if(is.numeric(df_temp[[i]]))
{
ifelse(length(unique(df_temp[[i]])) < 30 && !anyNA(df_temp[[i]]),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz,
breaks = seq(min(df_temp[[i]]),
max(df_temp[[i]]),
length.out = length(unique(df_temp[[i]])))) + facet_grid(Source~.,scales = "free_x",space = "free_x")  + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz) + facet_grid(Source~.,scales = "free_x",space = "free_x")+ theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')))
}
else {if(length(unique(df_temp[[i]])) < 20) ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))
else ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x=element_blank(),                                                                                                                                                                                                axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))}
ggsave(filename = paste0(i, '.pdf'), width = 15, height = 15)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/3, ax.text = 50/2, wrap = 50/3, sz = 3.5/2,y_label_scl = 0.4)
# Updated univariate plots ------------------------------------------------
library(ggplot2); library(tidyverse); library(cowplot);
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
df_f$Source <- 'Official'
df_u$Source <- 'Merged'
df_f$shots <- df_f$key_passes <- df_f$xG <- df_f$xA <- df_f$npg <- df_f$npxG <- df_f$xGChain <- df_f$xGChain <- df_f$xGBuildup <- NA
df_temp <- rbind(df_f,df_u)
df_temp$Source <- as.factor(df_temp$Source)
save_ggs <- function(df_temp, i, ax.tit, ax.text, wrap,sz,y_label_scl){
if(names(df_temp[i]) %in% c('shots', 'key_passes','xG','xA','npg','npxG','xGChain','xGBuildup')) df_temp <- df_temp[complete.cases(df_temp), ]
if(is.numeric(df_temp[[i]]))
{
ifelse(length(unique(df_temp[[i]])) < 30 && !anyNA(df_temp[[i]]),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz,
breaks = seq(min(df_temp[[i]]),
max(df_temp[[i]]),
length.out = length(unique(df_temp[[i]])))) + facet_grid(Source~.,scales = "free_x",space = "free_x")  + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz) + facet_grid(Source~.,scales = "free_x",space = "free_x")+ theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')))
}
else {if(length(unique(df_temp[[i]])) < 20) ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))
else ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x=element_blank(),                                                                                                                                                                                                axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))}
ggsave(filename = paste0(i, '.pdf'), width = 15, height = 15)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/3, ax.text = 50/2, wrap = 50/2, sz = 3.5/2,y_label_scl = 0.4)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/3, ax.text = 50/2, wrap = 50/1.5, sz = 3.5/2,y_label_scl = 0.4)
# Updated univariate plots ------------------------------------------------
library(ggplot2); library(tidyverse); library(cowplot);
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
df_f$Source <- 'Official'
df_u$Source <- 'Merged'
df_f$shots <- df_f$key_passes <- df_f$xG <- df_f$xA <- df_f$npg <- df_f$npxG <- df_f$xGChain <- df_f$xGChain <- df_f$xGBuildup <- NA
df_temp <- rbind(df_f,df_u)
df_temp$Source <- as.factor(df_temp$Source)
save_ggs <- function(df_temp, i, ax.tit, ax.text, wrap,sz,y_label_scl){
if(names(df_temp[i]) %in% c('shots', 'key_passes','xG','xA','npg','npxG','xGChain','xGBuildup')) df_temp <- df_temp[complete.cases(df_temp), ]
if(is.numeric(df_temp[[i]]))
{
ifelse(length(unique(df_temp[[i]])) < 30 && !anyNA(df_temp[[i]]),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz,
breaks = seq(min(df_temp[[i]]),
max(df_temp[[i]]),
length.out = length(unique(df_temp[[i]])))) + facet_grid(Source~.,scales = "free_x",space = "free_x")  + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap)),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz) + facet_grid(Source~.,scales = "free_x",space = "free_x")+ theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap)))
}
else {if(length(unique(df_temp[[i]])) < 20) ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))
else ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x=element_blank(),                                                                                                                                                                                                axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))}
ggsave(filename = paste0(i, '.pdf'), width = 15, height = 15)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75/3, ax.text = 50/2, wrap = 50/1.5, sz = 3.5/2,y_label_scl = 0.4)
# Updated univariate plots ------------------------------------------------
library(ggplot2); library(tidyverse); library(cowplot);
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
df_f$Source <- 'Offical'
df_u$Source <- 'Merged'
df_f$shots <- df_f$key_passes <- df_f$xG <- df_f$xA <- df_f$npg <- df_f$npxG <- df_f$xGChain <- df_f$xGChain <- df_f$xGBuildup <- NA
df_temp <- rbind(df_f,df_u)
df_temp$Source <- as.factor(df_temp$Source)
save_ggs <- function(df_temp, i, ax.tit, ax.text, wrap,sz,y_label_scl){
if(names(df_temp[i]) %in% c('shots', 'key_passes','xG','xA','npg','npxG','xGChain','xGBuildup')) df_temp <- df_temp[complete.cases(df_temp), ]
if(is.numeric(df_temp[[i]]))
{
ifelse(length(unique(df_temp[[i]])) < 30 && !anyNA(df_temp[[i]]),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz,
breaks = seq(min(df_temp[[i]]),
max(df_temp[[i]]),
length.out = length(unique(df_temp[[i]])))) + facet_grid(Source~.,scales = "free_x",space = "free_x")  + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')),
ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) + geom_histogram(aes(y=..density..,), colour = 'black',size = sz) + facet_grid(Source~.,scales = "free_x",space = "free_x")+ theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold')))
}
else {if(length(unique(df_temp[[i]])) < 20) ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x = element_text(size = ax.text),
axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))
else ggplot(df_temp) + aes(x = df_temp[[i]]) + aes_string(names(df_temp[i])) +  geom_bar(colour = 'black',size = sz)+ facet_grid(Source~.,scales = "free_x",space = "free_x") + theme(axis.text=element_text(size=ax.tit),
axis.title.x=element_text(size=ax.tit),
axis.title.y=element_text(size=ax.tit*y_label_scl),
axis.text.x=element_blank(),                                                                                                                                                                                                axis.text.y = element_text(size = ax.text/2),
strip.text = element_text(size = wrap, face = 'bold'))}
ggsave(filename = paste0(i, '.pdf'), width = 15, height = 15)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
for(i in 1:(ncol(df_temp) - 1)) save_ggs(df_temp, i, ax.tit = 75, ax.text = 50, wrap = 50, sz = 3.5,y_label_scl = 0.4)
nrow(df_u[df_u$minutes == 0,])
nrow(df_f) - 25860
nrow(df_f[df_f$minutes == 0,])/nrow(df_f) * 100
nrow(df_f[df_f$minutes == 0,])
nrow(df_u[df_u$minutes == 0,])
length(unique(df_f[df_f$minutes > 0, 'player_name']))
length(unique(df_u[df_u$minutes > 0, 'player_name']))
max(df_f[df_f$minutes > 0, 'total_points'])
max(df_u[df_u$minutes > 0, 'total_points'])
# Non-duplicated entries --------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_u$shots <- df_u$key_passes <- df_u$xG <- df_u$xA <- df_u$npg <- df_u$npxG <- df_u$xGChain <- df_u$xGChain <- df_u$xGBuildup <- NA
dup <- anti_join(df_u, df_f)
unique(dup$player_name) # Instances in understat data not in fpl data
dup <- anti_join(df_f, df_u) # Instances in fpl data not in us data
length(unique(dup$player_name))
unique(dup$player_name)
dup <- anti_join(df_f[df_f$minutes > 0, ], df_u[df_u$minutes > 0, ]) # Instances in fpl data not in us data with non-zero min
a <- df_f[df_f$player_name %in% unique(dup$player_name),]
View(a)
a[a$minutes > 0]
a[a$minutes > 0,]
nrow(a[a$minutes > 0,])
a <- a[a$minutes > 0,]
View(a)
sapply('player_name', function(var_x){print(length(unique(a[[var_x]])))})
nrow(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo'])
nrow(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo',])
nrow(a[a$player_name == 'Vitor Ferreira',])
nrow(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus',])
a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points']
mean(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points'])
mean(a[a$player_name == 'Vitor Ferreira','total_points'])
a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus',]
mean(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus','total_points'])
mean(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus','minutes'])
mean(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','minutes'])
mean(a[a$player_name == 'Vitor Ferreira','minutes'])
mean(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus','minutes'])
mean(a[a$player_name == 'Vitor Ferreira','minutes'])
mean(a[a$player_name == 'Vitor Ferreira','total_points'])
nrow(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo',])
nrow(a[a$player_name == 'Vitor Ferreira',])
nrow(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus',])
nrow(a[a$player_name == 'Vitor Ferreira',])
nrow(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo',])
nrow(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus',])
mean(a[a$player_name == 'Vitor Ferreira','minutes'])
mean(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','minutes'])
mean(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus','minutes'])
mean(a[a$player_name == 'Vitor Ferreira','minutes'])
mean(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','minutes'])
mean(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus','minutes'])
nrow(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus',])
mean(a[a$player_name == 'Vitor Ferreira','minutes'])
mean(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','minutes'])
mean(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus','minutes'])
mean(a[a$player_name == 'Vitor Ferreira','total_points'])
mean(a[a$player_name == 'Vitor Ferreira','total_points'])
mean(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points'])
mean(a[a$player_name == 'JoÃ£o Pedro Junqueira de Jesus','total_points'])
View(a)
mean(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','minutes'])
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points'])
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points']) %>% xtable()
%>%
papeR::prettify(summary(summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points'])))
%>%
papeR::prettify(summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points']))
%>%
papeR::prettify(summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points']))
papeR::prettify(summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points']))
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points']
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points'])
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points'])
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points']) %>% kable()
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points']) %>% kable()
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points']) %>% kable()
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points'])
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo',c('total_points', 'minutes')])
papeR::prettify(summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points'])) %>% kable()
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo',c('total_points', 'minutes')]) %>% kable()
summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo',c('total_points', 'minutes')]) %>% kable('latex')
summarize(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo',c('total_points', 'minutes')])
papeR::prettify(summary(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo','total_points'])) %>% kable('latex')
summarize(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo',c('total_points', 'minutes')]) %>% print()
summarize(a[a$player_name == 'AdriÃ¡n San Miguel del Castillo',c('total_points', 'minutes')]) %>% xtable() %>% print()
summarize(a, group = 'player_name')
summarize(a[c('total_points', 'minutes')], group = 'player_name')
summarize(a[c('total_points', 'minutes', 'player_name')], group = 'player_name')
summarize(a[c('total_points', 'minutes', 'player_name')], group = 'player_name', test = FALSE)
a <- droplevels.data.frame(a)
summarize(a[c('total_points', 'minutes', 'player_name')], group = 'player_name', test = FALSE)
a <- droplevels.data.frame(a)
summarize(a[c('total_points', 'minutes', 'player_name')], group = 'player_name', test = FALSE) %>% xtable() %>% print()
View(a)
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
nrow(df_f[df_f$total_points == -1])
nrow(df_f[df_f$total_points == -1,])
nrow(df_u[df_u$total_points == --,])
nrow(df_u[df_u$total_points == -1,])
nrow(df_f[df_f$total_points == 0,])
nrow(df_u[df_u$total_points == 0,])
nrow(df_u[df_u$total_points == 0,])/nrow(df_u)
nrow(df_f[df_f$total_points == -1,])/nrow(df_f)
nrow(df_u[df_u$total_points == -1,])/nrow(df_f)
nrow(df_u[df_u$total_points == -1,])/nrow(df_u)
nrow(df_f[df_f$total_points == -1,])/nrow(df_f)
nrow(df_u[df_u$total_points == -1,])/nrow(df_u)
nrow(df_f[df_f$total_points == 0,])/nrow(df_f)
nrow(df_u[df_u$total_points == 0,])/nrow(df_u)
nrow(df_f[df_f$total_points == -1,])/nrow(df_f)
nrow(df_f[df_f$total_points == 0,])/nrow(df_f)
nrow(df_u[df_u$total_points == 0,])/nrow(df_u)
nrow(df_f[df_f$total_points == -1,])/nrow(df_f)
nrow(df_u[df_u$total_points == -1,])/nrow(df_u)
