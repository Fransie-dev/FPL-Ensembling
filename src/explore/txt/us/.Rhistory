pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])) hist(df[,i], main=colnames(df)[i], breaks = length(unique(df[,i])), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])) hist(df[,i], main=colnames(df)[i], breaks = length(unique(df[,i])), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
_
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])) hist(df[,i], main=colnames(df)[i], breaks = length(unique(df[,i])), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
# Libraries ---------------------------------------------------------------
library(ggplot2)
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
library(tidyr)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
# Check encoding ----------------------------------------------------------
head(df_f[,colnames(df_f)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_u[,colnames(df_u)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_f[sapply(df_f, is.numeric)])
head(df_u[sapply(df_u, is.numeric)])
# Number of unique entries -----------------------------------------------
sapply(names(df_f), function(var_x){print(length(unique(df_f[[var_x]])))})
sapply(names(df_u), function(var_x){print(length(unique(df_u[[var_x]])))})
# For easy visualization of discrete features -----------------------------
encode_factors <- function(df){
df$player_name <- as.factor(df$player_name)
df$position <- as.factor(df$position)
df$kickoff_time <- as.factor(df$kickoff_time)
leng = 5
uniqs <- sort(sapply(df, function(x) length(unique(x))), decreasing = T)
df_cnt <- data.frame(column = names(uniqs), nuniq = uniqs, row.names = NULL)
print(df_cnt)
nms <- as.character(df_cnt[df_cnt$nuniq < leng, 'column'])
df[nms] <- lapply(df[nms], as.factor)
return(df)
}
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])) hist(df[,i], main=colnames(df)[i], breaks = (length(unique(df[,i])) + 1), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])) hist(df[,i], main=colnames(df)[i], breaks = (length(unique(df[,i])) + 1), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])) hist(df[,i], main=colnames(df)[i], breaks = (length(unique(df[,i])) + 2), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")
dev.off()
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])) hist(df[,i], main=colnames(df)[i], breaks = (length(unique(df[,i])) + 2), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
(length(unique(df_f[,'goals_conceded'])) + 2)
(length(unique(df_f[,'goals_conceded'])))
(length(unique(df_f[,'goals_conceded'])) + 1)
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])) hist(df[,i], main=colnames(df)[i], breaks = seq(min(df[,i]), max(df[,i])), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")
dev.off()
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])) hist(df[,i], main=colnames(df)[i], breaks = seq(min(df[,i]), max(df[,i])), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")
dev.off()
}}
(length(unique(df_f[,'goals_conceded'])) + 1)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])){hist(df[,i], main=colnames(df)[i], breaks = seq(min(df[,i]), max(df[,i])), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")}
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])){hist(df[,i], main=colnames(df)[i], breaks = breaks = seq(min(df[,i]), max(df[,i]), length.out = unique(df[,i])), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")}
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])){hist(df[,i], main=colnames(df)[i], breaks = seq(min(df[,i]), max(df[,i]), length.out = length(unique(df[,i]))), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")}
dev.off()
}}
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
ifelse(is.numeric(df[,i]),
hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20),
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency"))
if((length(unique(df[,i]))  < 15) && is.numeric(df[,i])){hist(df[,i], main=colnames(df)[i], breaks = seq(min(df[,i]), max(df[,i]), length.out = length(unique(df[,i]))), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")}
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
seq(min(df_F[,'own_goals']), max(df_f[,'own_goals']), length.out = length(unique(df[,i])))
seq(min(df_f[,'own_goals']), max(df_f[,'own_goals']), length.out = length(unique(df[,i])))
seq(min(df_f[,'own_goals']), max(df_f[,'own_goals']), length.out = length(unique(df_f[,'clean_sheets'])))
seq(min(df_f[,'goals_scored']), max(df_f[,'goals_scored']), length.out = length(unique(df_f[,'goals_scored'])))
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
if(is.numeric(df[,i]))
{
if(length(unique(df[,i]))  < 15){hist(df[,i], main=colnames(df)[i], breaks = seq(min(df[,i]), max(df[,i]), length.out = length(unique(df[,i]))), cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")}
else{hist(df[,i], main=colnames(df)[i], cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20)}
}
else
{
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency")
}
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
if(is.numeric(df[,i]))
{
if(length(unique(df[,i]))  < 15){hist(df[,i], main=colnames(df)[i], right = FALSE, breaks = seq(min(df[,i]), max(df[,i]), length.out = length(unique(df[,i]))),
cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")}
else{hist(df[,i], main=colnames(df)[i], right = FALSE, cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20)}
}
else
{
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency")
}
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
xtable(summarize(df_f, type = "factor",
variables = "position", group = "goals_conceded"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
xtable(summarize(df_f, type = "factor",
variables = "position", group = "clean_sheets"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
xtable(summarize(df_f, type = "factor",
variables = "position", group = "clean_sheets"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
xtable(summarize(df_f, type = "factor",
variables = "was_home", group = "clean_sheets"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
xtable(summarize(df_f, type = "factor",
variables = "position", group = "clean_sheets"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
xtable(summarize(df_f, type = "factor",
variables = "penalties_missed", group = "clean_sheets"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
xtable(summarize(df_f, type = "factor",
variables = "player_name", group = "clean_sheets"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
xtable(summarize(df_f, type = "factor",
variables = "was_home", group = "clean_sheets"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
# Libraries ---------------------------------------------------------------
library(ggplot2)
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
library(tidyr)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
# Check encoding ----------------------------------------------------------
head(df_f[,colnames(df_f)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_u[,colnames(df_u)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_f[sapply(df_f, is.numeric)])
head(df_u[sapply(df_u, is.numeric)])
# Number of unique entries -----------------------------------------------
sapply(names(df_f), function(var_x){print(length(unique(df_f[[var_x]])))})
sapply(names(df_u), function(var_x){print(length(unique(df_u[[var_x]])))})
# For easy visualization of discrete features -----------------------------
encode_factors <- function(df){
df$player_name <- as.factor(df$player_name)
df$position <- as.factor(df$position)
df$kickoff_time <- as.factor(df$kickoff_time)
leng = 5
uniqs <- sort(sapply(df, function(x) length(unique(x))), decreasing = T)
df_cnt <- data.frame(column = names(uniqs), nuniq = uniqs, row.names = NULL)
print(df_cnt)
nms <- as.character(df_cnt[df_cnt$nuniq < leng, 'column'])
df[nms] <- lapply(df[nms], as.factor)
return(df)
}
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
if(is.numeric(df[,i]))
{
if(length(unique(df[,i]))  < 15){hist(df[,i], main=colnames(df)[i], right = FALSE, breaks = seq(min(df[,i]), max(df[,i]), length.out = length(unique(df[,i]))),
cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")}
else{hist(df[,i], main=colnames(df)[i], right = FALSE, cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20)}
}
else
{
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency")
}
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
# Statistical summaries ---------------------------------------------------
printx <- function(df, filename, type){
sink(file = filename)
print(xtable(summarize(df, type = type)))
sink(file = NULL)}
name_date_viz <- function(df_f, df_u, ft){
df_1 <- rbind(df_f %>% select(ft)  %>% summarize(type = 'factor')%>% head(5), 0, df_f %>% select(ft)  %>% summarize(type = 'factor') %>% tail(5))
df_2 <- rbind(df_u %>% select(ft)  %>% summarize(type = 'factor')%>% head(5), 0, df_u %>% select(ft)  %>% summarize(type = 'factor') %>% tail(5))
df_3 <- cbind(df_1, df_2)
df_3$` ` <- df_3$` ` <- NULL
return(df_3)}
team_viz <- function(df_f, df_u){
df_1 <- df_f %>% select(team) %>% summarize(type = 'factor')
df_2 <- df_f %>% select(opponent_team) %>% summarize(type = 'factor')
df_1$` ` <- NULL
df_2$Level <- NULL
df_2$` ` <- NULL
df_3 <- cbind(df_1, df_2)
df_4 <- df_u %>% select(team) %>% summarize(type = 'factor')
df_5 <- df_u %>% select(opponent_team) %>% summarize(type = 'factor')
df_4$` ` <- NULL
df_5$Level <- NULL
df_5$` ` <- NULL
df_6 <- cbind(df_4, df_5)
df_3
df_6$Level <- NULL
return(cbind(df_3, df_6))
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//fpl//')
df_f %>% printx(filename = "fpl_numeric_summary.txt", type = 'numeric')
df_f %>% select(-player_name, -kickoff_time, -team, -opponent_team) %>% printx(filename = "fpl_factor_summary.txt", type = 'factor')
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//us//')
df_u %>% printx(filename = "us_numeric_summary.txt", type = 'numeric')
df_u %>% select(-player_name, -kickoff_time, -team, -opponent_team) %>% printx(filename = "us_factor_summary.txt", type = 'factor')
# Merge name and kickoff time ---------------------------------------------
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//')
sink(file = 'player_names.txt'); name_date_viz(df_f, df_u, 'player_name') %>% xtable()%>% print(); sink(file = NULL)
sink(file = 'kickoff_time.txt'); name_date_viz(df_f, df_u, 'kickoff_time') %>% xtable()%>% print(); sink(file = NULL)
sink(file = 'team.txt'); team_viz(df_f, df_u) %>% xtable() %>% print(); sink(file = NULL)
# Grouped summaries -------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
print_groups <- function(df, nm){
for(i in c('clean_sheets', 'own_goals', 'penalties_missed', 'red_cards', 'was_home', 'yellow_cards', 'season')){
filenm = paste0(paste0(nm, '_'), i, '.txt')
sink(file = filenm)
df[,i] <- as.factor(df[,i])
groups <- summarize(df, type = 'numeric', group = i, test = TRUE, count = TRUE)
df %>% select(c(groups[groups$p.value == '<0.001',1], i)) %>% summarize(group = i) %>%  xtable() %>%  print()
df[,i] <- as.numeric(df[,i])
sink(file = NULL)}
for(i in c('penalties_saved', 'position', 'team', 'bonus', 'goals_scored', 'was_home', 'goals_conceded')){
filenm = paste0(paste0(nm, '_'), i, '.txt')
sink(file = filenm)
df[,i] <- as.factor(df[,i])
summarize(df, type = 'numeric', group = i, test = FALSE,count = TRUE) %>%  xtable() %>% print()
sink(file = NULL)
if(any(colnames(df) %in% c('npg', 'shots', 'key_passes'))) for(i in  c('npg', 'shots', 'key_passes')){
filenm = paste0(paste0(nm, '_'), i, '.txt')
sink(file = filenm)
df[,i] <- as.factor(df[,i])
summarize(df, type = 'numeric', group = i, test = FALSE,count = TRUE) %>%  xtable() %>% print()
df[,i] <- as.numeric(df[,i])
sink(file = NULL)}}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//fpl//')
print_groups(df_f, 'fpl')
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//us//')
print_groups(df_u, 'us')
# Libraries ---------------------------------------------------------------
library(ggplot2)
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
library(tidyr)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
# Check encoding ----------------------------------------------------------
head(df_f[,colnames(df_f)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_u[,colnames(df_u)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_f[sapply(df_f, is.numeric)])
head(df_u[sapply(df_u, is.numeric)])
# Number of unique entries -----------------------------------------------
sapply(names(df_f), function(var_x){print(length(unique(df_f[[var_x]])))})
sapply(names(df_u), function(var_x){print(length(unique(df_u[[var_x]])))})
# For easy visualization of discrete features -----------------------------
encode_factors <- function(df){
df$player_name <- as.factor(df$player_name)
df$position <- as.factor(df$position)
df$kickoff_time <- as.factor(df$kickoff_time)
leng = 3
uniqs <- sort(sapply(df, function(x) length(unique(x))), decreasing = T)
df_cnt <- data.frame(column = names(uniqs), nuniq = uniqs, row.names = NULL)
print(df_cnt)
nms <- as.character(df_cnt[df_cnt$nuniq < leng, 'column'])
df[nms] <- lapply(df[nms], as.factor)
return(df)
}
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
# Distribution plots ------------------------------------------------------
plot_dist <- function(df){
for(i in 1:ncol(df)){
pdf(paste0(i, '.pdf'),onefile = FALSE)
if(is.numeric(df[,i]))
{
if(length(unique(df[,i]))  < 15){hist(df[,i], main=colnames(df)[i], right = FALSE, breaks = seq(min(df[,i]), max(df[,i]), length.out = length(unique(df[,i]))),
cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency")}
else{hist(df[,i], main=colnames(df)[i], right = FALSE, cex.main = 2.5, cex.lab = 1.5, cex.axis = 1.5,  col = "gray", xlab = "Values", ylab = "Frequency",breaks = 20)}
}
else
{
plot(df[,i], main=colnames(df)[i],  cex.main = 2.5, cex.names = 2,  cex.lab = 1.5, cex.axis = 1.5, xlab = "Category", ylab = "Frequency")
}
dev.off()
}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//fpl//')
plot_dist(df_f)
setwd('C://Users//jd-vz//Desktop//Code//src//explore//pdf//understat//')
plot_dist(df_u)
# Statistical summaries ---------------------------------------------------
printx <- function(df, filename, type){
sink(file = filename)
print(xtable(summarize(df, type = type)))
sink(file = NULL)}
name_date_viz <- function(df_f, df_u, ft){
df_1 <- rbind(df_f %>% select(ft)  %>% summarize(type = 'factor')%>% head(5), 0, df_f %>% select(ft)  %>% summarize(type = 'factor') %>% tail(5))
df_2 <- rbind(df_u %>% select(ft)  %>% summarize(type = 'factor')%>% head(5), 0, df_u %>% select(ft)  %>% summarize(type = 'factor') %>% tail(5))
df_3 <- cbind(df_1, df_2)
df_3$` ` <- df_3$` ` <- NULL
return(df_3)}
team_viz <- function(df_f, df_u){
df_1 <- df_f %>% select(team) %>% summarize(type = 'factor')
df_2 <- df_f %>% select(opponent_team) %>% summarize(type = 'factor')
df_1$` ` <- NULL
df_2$Level <- NULL
df_2$` ` <- NULL
df_3 <- cbind(df_1, df_2)
df_4 <- df_u %>% select(team) %>% summarize(type = 'factor')
df_5 <- df_u %>% select(opponent_team) %>% summarize(type = 'factor')
df_4$` ` <- NULL
df_5$Level <- NULL
df_5$` ` <- NULL
df_6 <- cbind(df_4, df_5)
df_3
df_6$Level <- NULL
return(cbind(df_3, df_6))
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//fpl//')
df_f %>% printx(filename = "fpl_numeric_summary.txt", type = 'numeric')
df_f %>% select(-player_name, -kickoff_time, -team, -opponent_team) %>% printx(filename = "fpl_factor_summary.txt", type = 'factor')
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//us//')
df_u %>% printx(filename = "us_numeric_summary.txt", type = 'numeric')
df_u %>% select(-player_name, -kickoff_time, -team, -opponent_team) %>% printx(filename = "us_factor_summary.txt", type = 'factor')
# Merge name and kickoff time ---------------------------------------------
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//')
sink(file = 'player_names.txt'); name_date_viz(df_f, df_u, 'player_name') %>% xtable()%>% print(); sink(file = NULL)
sink(file = 'kickoff_time.txt'); name_date_viz(df_f, df_u, 'kickoff_time') %>% xtable()%>% print(); sink(file = NULL)
sink(file = 'team.txt'); team_viz(df_f, df_u) %>% xtable() %>% print(); sink(file = NULL)
# Grouped summaries -------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
print_groups <- function(df, nm){
for(i in c('clean_sheets', 'own_goals', 'penalties_missed', 'red_cards', 'was_home', 'yellow_cards', 'season')){
filenm = paste0(paste0(nm, '_'), i, '.txt')
sink(file = filenm)
df[,i] <- as.factor(df[,i])
groups <- summarize(df, type = 'numeric', group = i, test = TRUE, count = TRUE)
df %>% select(c(groups[groups$p.value == '<0.001',1], i)) %>% summarize(group = i) %>%  xtable() %>%  print()
df[,i] <- as.numeric(df[,i])
sink(file = NULL)}
for(i in c('penalties_saved', 'position', 'team', 'bonus', 'goals_scored', 'was_home', 'goals_conceded')){
filenm = paste0(paste0(nm, '_'), i, '.txt')
sink(file = filenm)
df[,i] <- as.factor(df[,i])
summarize(df, type = 'numeric', group = i, test = FALSE,count = TRUE) %>%  xtable() %>% print()
sink(file = NULL)
if(any(colnames(df) %in% c('npg', 'shots', 'key_passes'))) for(i in  c('npg', 'shots', 'key_passes')){
filenm = paste0(paste0(nm, '_'), i, '.txt')
sink(file = filenm)
df[,i] <- as.factor(df[,i])
summarize(df, type = 'numeric', group = i, test = FALSE,count = TRUE) %>%  xtable() %>% print()
df[,i] <- as.numeric(df[,i])
sink(file = NULL)}}}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//fpl//')
print_groups(df_f, 'fpl')
setwd('C://Users//jd-vz//Desktop//Code//src//explore//txt//us//')
print_groups(df_u, 'us')
