lapply(df, is.numeric
lapply(df, is.numeric)
# df <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
num_feat <- df[sapply(df, is.numeric)]
plot_grid(plotlist = my_plots, ncol = 4, nrow = 7)
plot_grid(plotlist = my_plots, ncol = 4, nrow = 7,align = 'hv')
devtools::install_github("stefan-schroedl/plotluck")
plotluck::plotluck(df, total_points)
plotluck::plotluck(df, 'total_points')
plotluck::plotluck(df, total_points)
plotluck::plotluck(df, total_points~.)
plotluck::plotluck(df, total_points~position)
plotluck::plotluck(df, total_points~was_home)
# Libraries ---------------------------------------------------------------
library(ggplot2)
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
# Check encoding ----------------------------------------------------------
head(df_f[,colnames(df_f)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_u[,colnames(df_u)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_f[sapply(df_f, is.numeric)])
head(df_u[sapply(df_u, is.numeric)])
# Fix unique understat errors ---------------------------------------------
df_u$npg <- as.factor(df_u$npg)
# Number of unique entries -----------------------------------------------
sapply(names(df_f), function(var_x){print(length(unique(df_f[[var_x]])))})
sapply(names(df_u), function(var_x){print(length(unique(df_u[[var_x]])))})
# Encode discrete features as factors -------------------------------------
encode_factors <- function(df){
df$player_name <- as.factor(df$player_name)
df$position <- as.factor(df$position)
df$team <- as.factor(df$team)
df$clean_sheets <- as.factor(df$clean_sheets)
df$kickoff_time <- as.factor(df$kickoff_time)
df$opponent_team <- as.factor(df$opponent_team)
df$own_goals <- as.factor(df$own_goals)
df$penalties_missed <- as.factor(df$penalties_missed)
df$penalties_saved <- as.factor(df$penalties_saved)
df$red_cards <- as.factor(df$red_cards)
df$was_home <- as.factor(df$was_home)
df$yellow_cards <- as.factor(df$yellow_cards)
df$season <- as.factor(df$season)
return(df)
}
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
# Libraries ---------------------------------------------------------------
library(ggplot2)
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
# Check encoding ----------------------------------------------------------
head(df_f[,colnames(df_f)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_u[,colnames(df_u)[grepl('factor|logical|character',sapply(df_f,class))]])
head(df_f[sapply(df_f, is.numeric)])
head(df_u[sapply(df_u, is.numeric)])
# Fix unique understat errors ---------------------------------------------
df_u$npg <- as.factor(df_u$npg)
# Number of unique entries -----------------------------------------------
sapply(names(df_f), function(var_x){print(length(unique(df_f[[var_x]])))})
sapply(names(df_u), function(var_x){print(length(unique(df_u[[var_x]])))})
# Encode discrete features as factors -------------------------------------
encode_factors <- function(df){
df$player_name <- as.factor(df$player_name)
df$position <- as.factor(df$position)
df$team <- as.factor(df$team)
df$clean_sheets <- as.factor(df$clean_sheets)
df$kickoff_time <- as.factor(df$kickoff_time)
df$opponent_team <- as.factor(df$opponent_team)
df$own_goals <- as.factor(df$own_goals)
df$penalties_missed <- as.factor(df$penalties_missed)
df$penalties_saved <- as.factor(df$penalties_saved)
df$red_cards <- as.factor(df$red_cards)
df$was_home <- as.factor(df$was_home)
df$yellow_cards <- as.factor(df$yellow_cards)
df$season <- as.factor(df$season)
return(df)
}
df_f <- encode_factors(df_f)
df_u <- encode_factors(df_u)
# Libraries ---------------------------------------------------------------
library(ggplot2)
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
library(tidyr)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
autoEDA(df_temp, 'was_home', sampleRate = 1,
outcomeType = "automatic", maxUniques = 15, maxLevels = 25,
removeConstant = FALSE, removeZeroSpread = FALSE,
removeMajorityMissing = FALSE, imputeMissing = FALSE, clipOutliers = FALSE,
minLevelPercentage = 0.025, predictivePower = TRUE,
outlierMethod = "tukey", lowPercentile = 0.01, upPercentile = 0.99,
plotCategorical = "stackedBar", plotContinuous = "histogram",
outputPath = 'C://Users//jd-vz//Desktop//Code//src//explore//pdf//',
filename = "univariate",
verbose = TRUE)
# Libraries ---------------------------------------------------------------
library(ggplot2)
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
library(tidyr)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
autoEDA(df_u, 'was_home', sampleRate = 1,
outcomeType = "automatic", maxUniques = 15, maxLevels = 25,
removeConstant = FALSE, removeZeroSpread = FALSE,
removeMajorityMissing = FALSE, imputeMissing = FALSE, clipOutliers = FALSE,
minLevelPercentage = 0.025, predictivePower = TRUE,
outlierMethod = "tukey", lowPercentile = 0.01, upPercentile = 0.99,
plotCategorical = "stackedBar", plotContinuous = "histogram",
outputPath = 'C://Users//jd-vz//Desktop//Code//src//explore//pdf//',
filename = "univariate",
verbose = TRUE)
autoEDA(df_u, 'was_home', sampleRate = 1,
outcomeType = "automatic", maxUniques = 15, maxLevels = 25,
removeConstant = FALSE, removeZeroSpread = FALSE,
removeMajorityMissing = FALSE, imputeMissing = FALSE, clipOutliers = FALSE,
minLevelPercentage = 0.025, predictivePower = TRUE,
outlierMethod = "tukey", lowPercentile = 0.01, upPercentile = 0.99,
plotCategorical = "stackedBar", plotContinuous = "histogram",
outputPath = 'C://Users//jd-vz//Desktop//Code//src//explore//pdf//',
filename = "univariate",
verbose = TRUE)
# Initial distributions ---------------------------------------------------
for(i in c('clean_sheets', 'own_goals', 'penalties_missed', 'was_home', 'red_cards', 'was_home', 'yellow_cards', 'season')) autoEDA(df_u, i, sampleRate = 1,
outcomeType = "automatic", maxUniques = 15, maxLevels = 25,
removeConstant = FALSE, removeZeroSpread = FALSE,
removeMajorityMissing = FALSE, imputeMissing = FALSE, clipOutliers = FALSE,
minLevelPercentage = 0.025, predictivePower = TRUE,
outlierMethod = "tukey", lowPercentile = 0.01, upPercentile = 0.99,
plotCategorical = "stackedBar", plotContinuous = "histogram",
outputPath = 'C://Users//jd-vz//Desktop//Code//src//explore//pdf//',
filename = i,
verbose = TRUE)
xtable(summarize(df_u, type = "factor",
variables = "clean_sheets", group = "was_home"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
xtable(summarize(df_u, type = "factor",
variables = "position", group = "was_home"),
caption = "Example table for Fisher's exact test",
label = "tab:Fisher")
# Pairs plot of ten highest correlated features ---------------------------
top_10 <- c('total_points', 'position', 'bps', 'bonus', 'influence', 'goals_scored', 'npg', 'ict_index', 'clean_sheets', 'assists', 'xG')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_u <- df_u[top_10]
GGally::ggpairs(df_u, mapping = aes(colour = position, alpha = 0.6), title="Pairs plot: Unscaled, clustered dataset with Gender and Cluster included") + theme_grey(base_size = 10)
# Pairs plot of ten highest correlated features ---------------------------
library(ggplot2)
library(GGally)
top_10 <- c('total_points', 'position', 'bps', 'bonus', 'influence', 'goals_scored', 'npg', 'ict_index', 'clean_sheets', 'assists', 'xG')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
df_u <- df_u[top_10]
ggpairs(df_u, mapping = aes(colour = position, alpha = 0.6), title="Pairs plot: Unscaled, clustered dataset with Gender and Cluster included") + theme_grey(base_size = 10)
wrapper_radarchart <- function(df, i){
colors <- c("#00AFBB", "#E7B800", "#FC4E07", '#ffa2bf')
# titles <- c('DEF', 'FWD', 'GK', 'MID')
op <- par(mar = c(2, 2, 2, 2))
par(mfrow = c(1,4))
# Create the radar chart
create_beautiful_radarchart(
data = df[c(1, 2, i+2), ], caxislabels = NULL,
color = colors[i], title = '')
par(op)}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//figs//')
feats_stats <- c('creativity', 'influence', 'threat', 'ict_index', 'xG', 'xA', 'npg', 'npxG', 'xGChain', 'xGBuildup')
match_stats <- c('assists',  'goals_scored', 'saves',  'penalties_saved', 'penalties_missed', 'shots', 'key_passes')
wrapper_radarchart(df[c(feats_stats)], i = 1)
# Create radar plots ------------------------------------------------------
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
library(tidyr)
library(ggplot2)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
maxs <- df_u %>% summarise_if(is.numeric, max)
row.names(maxs) <- 'Max'
mins <- df_u %>% summarise_if(is.numeric, min)
row.names(mins) <- 'Min'
positions <- df_u %>%
group_by(position) %>% summarise_if(is.numeric, max)%>% remove_rownames() %>% column_to_rownames('position')
df <- rbind(maxs, mins, positions)
library(fmsb)
create_beautiful_radarchart <- function(data, color = "#00AFBB",
vlabels = colnames(data), vlcex = 0.7,
caxislabels = NULL, title = NULL, ...){
radarchart(
data, axistype = 1,
# Customize the polygon
pcol = color, pfcol = scales::alpha(color, 0.5), plwd = 2, plty = 1,
# Customize the grid
cglcol = "grey", cglty = 1, cglwd = 0.8,
# Customize the axis
axislabcol = "grey",
# Variable labels
vlcex = vlcex, vlabels = vlabels,
caxislabels = caxislabels, title = title, ...
)
}
wrapper_radarchart <- function(df, i){
colors <- c("#00AFBB", "#E7B800", "#FC4E07", '#ffa2bf')
# titles <- c('DEF', 'FWD', 'GK', 'MID')
# op <- par(mar = c(2, 2, 2, 2))
# par(mfrow = c(1,4))
#
# # Create the radar chart
create_beautiful_radarchart(
data = df[c(1, 2, i+2), ], caxislabels = NULL,
color = colors[i], title = '')
par(op)}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//figs//')
feats_stats <- c('creativity', 'influence', 'threat', 'ict_index', 'xG', 'xA', 'npg', 'npxG', 'xGChain', 'xGBuildup')
match_stats <- c('assists',  'goals_scored', 'saves',  'penalties_saved', 'penalties_missed', 'shots', 'key_passes')
pdf('match_stats.pdf')
wrapper_radarchart(df[c(feats_stats)], i = 1)
wrapper_radarchart(df[c(match_stats)])
dev.off()
wrapper_radarchart(df[c(feats_stats)], i = 1)
wrapper_radarchart <- function(df, i){
colors <- c("#00AFBB", "#E7B800", "#FC4E07", '#ffa2bf')
# titles <- c('DEF', 'FWD', 'GK', 'MID')
# op <- par(mar = c(2, 2, 2, 2))
# par(mfrow = c(1,4))
#
# # Create the radar chart
create_beautiful_radarchart(
data = df[c(1, 2, i+2), ], caxislabels = NULL,
color = colors[i], title = '')
# par(op)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//figs//')
feats_stats <- c('creativity', 'influence', 'threat', 'ict_index', 'xG', 'xA', 'npg', 'npxG', 'xGChain', 'xGBuildup')
match_stats <- c('assists',  'goals_scored', 'saves',  'penalties_saved', 'penalties_missed', 'shots', 'key_passes')
pdf('match_stats.pdf')
wrapper_radarchart(df[c(feats_stats)], i = 1)
wrapper_radarchart(df[c(match_stats)])
dev.off()
df
setwd('C://Users//jd-vz//Desktop//Code//src//explore//figs//')
feats_stats <- c('creativity', 'influence', 'threat', 'ict_index', 'xG', 'xA', 'npg', 'npxG', 'xGChain', 'xGBuildup')
match_stats <- c('assists',  'goals_scored', 'saves',  'penalties_saved', 'penalties_missed', 'shots', 'key_passes')
pdf('DEF_feat_stats.pdf')
wrapper_radarchart(df[c(feats_stats)], i = 1)
dev.off()
pdf('DEF_match_stats.pdf')
wrapper_radarchart(df[c(match_stats)], i = 1)
dev.off()
# Create radar plots ------------------------------------------------------
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
library(tidyr)
library(ggplot2)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
maxs <- df_u %>% summarise_if(is.numeric, max)
row.names(maxs) <- 'Max'
mins <- df_u %>% summarise_if(is.numeric, min)
row.names(mins) <- 'Min'
positions <- df_u %>%
group_by(position) %>% summarise_if(is.numeric, max)%>% remove_rownames() %>% column_to_rownames('position')
df <- rbind(maxs, mins, positions)
library(fmsb)
create_beautiful_radarchart <- function(data, color = "#00AFBB",
vlabels = colnames(data), vlcex = 0.7,
caxislabels = NULL, title = NULL, ...){
radarchart(
data, axistype = 1,
# Customize the polygon
pcol = color, pfcol = scales::alpha(color, 0.5), plwd = 2, plty = 1,
# Customize the grid
cglcol = "grey", cglty = 1, cglwd = 0.8,
# Customize the axis
axislabcol = "grey",
# Variable labels
vlcex = vlcex, vlabels = vlabels,
caxislabels = caxislabels, title = title, ...
)
}
wrapper_radarchart <- function(df){
colors <- c("#00AFBB", "#E7B800", "#FC4E07", '#ffa2bf')
# titles <- c('DEF', 'FWD', 'GK', 'MID')
op <- par(mar = c(6, 6, 2, 2))
# par(mfrow = c(1,4))
# Create the radar chart
for(i in 1:4){
create_beautiful_radarchart(
data = df[c(1, 2, i+2), ], caxislabels = NULL,
color = colors[i], title = ''
)
}
par(op)}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//figs//')
feats_stats <- c('creativity', 'influence', 'threat', 'ict_index', 'xG', 'xA', 'npg', 'npxG', 'xGChain', 'xGBuildup')
match_stats <- c('assists',  'goals_scored', 'saves',  'penalties_saved', 'penalties_missed', 'shots', 'key_passes')
pdf('match_stats.pdf')
wrapper_radarchart(df[c(feats_stats)])
wrapper_radarchart(df[c(match_stats)])
dev.off()
# Create radar plots ------------------------------------------------------
library(knitr)
library(dplyr)
library(kableExtra)
library(autoEDA)
library(rattle)
library(rpart)
library(rpart.plot)
library(partykit)
library(tidyrules)
library(papeR)
library(xtable)
library(tidyr)
library(ggplot2)
# Read data ---------------------------------------------------------------
df_f <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_fpl.csv')
df_u <- read.csv(file = 'C://Users//jd-vz//Desktop//Code//data//collected_us.csv')
maxs <- df_u %>% summarise_if(is.numeric, max)
row.names(maxs) <- 'Max'
mins <- df_u %>% summarise_if(is.numeric, min)
row.names(mins) <- 'Min'
positions <- df_u %>%
group_by(position) %>% summarise_if(is.numeric, max)%>% remove_rownames() %>% column_to_rownames('position')
df <- rbind(maxs, mins, positions)
library(fmsb)
create_beautiful_radarchart <- function(data, color = "#00AFBB",
vlabels = colnames(data), vlcex = 0.7,
caxislabels = NULL, title = NULL, ...){
radarchart(
data, axistype = 1,
# Customize the polygon
pcol = color, pfcol = scales::alpha(color, 0.5), plwd = 2, plty = 1,
# Customize the grid
cglcol = "grey", cglty = 1, cglwd = 0.8,
# Customize the axis
axislabcol = "grey",
# Variable labels
vlcex = vlcex, vlabels = vlabels,
caxislabels = caxislabels, title = title, ...
)
}
wrapper_radarchart <- function(df){
colors <- c("#00AFBB", "#E7B800", "#FC4E07", '#ffa2bf')
# titles <- c('DEF', 'FWD', 'GK', 'MID')
op <- par(mar = c(6, 6, 2, 2))
par(mfrow = c(1,4))
# Create the radar chart
for(i in 1:4){
create_beautiful_radarchart(
data = df[c(1, 2, i+2), ], caxislabels = NULL,
color = colors[i], title = ''
)
}
par(op)}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//figs//')
feats_stats <- c('creativity', 'influence', 'threat', 'ict_index', 'xG', 'xA', 'npg', 'npxG', 'xGChain', 'xGBuildup')
match_stats <- c('assists',  'goals_scored', 'saves',  'penalties_saved', 'penalties_missed', 'shots', 'key_passes')
pdf('match_stats.pdf')
wrapper_radarchart(df[c(feats_stats)])
wrapper_radarchart(df[c(match_stats)])
dev.off()
# Clean sheets + cards + goals concedered + own_goals, are equally distrib
j <- 0
for nm in c('DEF', 'FWD', 'GK', 'MID'){
j <- j + 1
pdf(paste0(nm, '_feat_stats.pdf'))
wrapper_radarchart(df[c(feats_stats)], i = 1)
dev.off()
pdf(paste0(nm, '_match_stats.pdf'))
wrapper_radarchart(df[c(match_stats)], i = 1)
dev.off()
}
j <- 0
for i in c('DEF', 'FWD', 'GK', 'MID'){
j <- j + 1
pdf(paste0(i, '_feat_stats.pdf'))
wrapper_radarchart(df[c(feats_stats)], i = 1)
dev.off()
pdf(paste0(i, '_match_stats.pdf'))
wrapper_radarchart(df[c(match_stats)], i = 1)
dev.off()
}
j <- 0
for{i in c('DEF', 'FWD', 'GK', 'MID')}{
j <- j + 1
pdf(paste0(i, '_feat_stats.pdf'))
wrapper_radarchart(df[c(feats_stats)], i = 1)
dev.off()
pdf(paste0(i, '_match_stats.pdf'))
wrapper_radarchart(df[c(match_stats)], i = 1)
dev.off()
}
j <- 0
for(i in c('DEF', 'FWD', 'GK', 'MID')){
j <- j + 1
pdf(paste0(i, '_feat_stats.pdf'))
wrapper_radarchart(df[c(feats_stats)], i = 1)
dev.off()
pdf(paste0(i, '_match_stats.pdf'))
wrapper_radarchart(df[c(match_stats)], i = 1)
dev.off()
}
j <- 0
for(i in c('DEF', 'FWD', 'GK', 'MID')){
j <- j + 1
pdf(paste0(i, '_feat_stats.pdf'))
wrapper_radarchart(df[c(feats_stats)], j)
dev.off()
pdf(paste0(i, '_match_stats.pdf'))
wrapper_radarchart(df[c(match_stats)], j)
dev.off()
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//figs//')
feats_stats <- c('creativity', 'influence', 'threat', 'ict_index', 'xG', 'xA', 'npg', 'npxG', 'xGChain', 'xGBuildup')
match_stats <- c('assists',  'goals_scored', 'saves',  'penalties_saved', 'penalties_missed', 'shots', 'key_passes')
j <- 0
for(i in c('DEF', 'FWD', 'GK', 'MID')){
j <- j + 1
pdf(paste0(i, '_feat_stats.pdf'))
wrapper_radarchart(df[c(feats_stats)], j)
dev.off()
pdf(paste0(i, '_match_stats.pdf'))
wrapper_radarchart(df[c(match_stats)], j)
dev.off()
}
wrapper_radarchart <- function(df, i){
colors <- c("#00AFBB", "#E7B800", "#FC4E07", '#ffa2bf')
# titles <- c('DEF', 'FWD', 'GK', 'MID')
# op <- par(mar = c(2, 2, 2, 2))
# par(mfrow = c(1,4))
#
# # Create the radar chart
create_beautiful_radarchart(
data = df[c(1, 2, i+2), ], caxislabels = NULL,
color = colors[i], title = '')
# par(op)
}
setwd('C://Users//jd-vz//Desktop//Code//src//explore//figs//')
feats_stats <- c('creativity', 'influence', 'threat', 'ict_index', 'xG', 'xA', 'npg', 'npxG', 'xGChain', 'xGBuildup')
match_stats <- c('assists',  'goals_scored', 'saves',  'penalties_saved', 'penalties_missed', 'shots', 'key_passes')
j <- 0
for(i in c('DEF', 'FWD', 'GK', 'MID')){
j <- j + 1
pdf(paste0(i, '_feat_stats.pdf'))
wrapper_radarchart(df[c(feats_stats)], j)
dev.off()
pdf(paste0(i, '_match_stats.pdf'))
wrapper_radarchart(df[c(match_stats)], j)
dev.off()
}
